name: deploy basic network (terraform)

on:
  workflow_dispatch:
    inputs:
      resource-group-name:
        required: false
        description: Azure resource group name (Leave empty to default to 'kraken-tf-{location}')
        type: string
      location:
        required: true
        description: Azure resource group location
        type: choice
        options:
        - westus2
        - centralus

  push:
    branches:
    paths:
      - .github/workflows/basic-network-terraform.yml
      - terraform/**

defaults:
  run:
    working-directory: ./terraform

env:
  IS_MAIN_PUSH: ${{ github.ref == 'refs/heads/main' }}
  AZURE_RESOURCE_GROUP_LOCATION: ${{ github.event.inputs.location || 'westus2' }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
      ARM_CLIENT_SECRET: ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
      ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
      ARM_TENANT_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1

    - name: terraform fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: true

    - name: terraform init
      id: init
      run: terraform init

    - name: terraform validate
      id: validate
      run: terraform validate -no-color

    - name: terraform plan
      id: plan
      env:
        AZURE_RESOURCE_GROUP_NAME: ${{ github.event.inputs.resource-group-name || format('kraken-tf-{0}', env.AZURE_RESOURCE_GROUP_LOCATION) }}
      run: |
        terraform plan -input=false -no-color \
          -var "resource_group_name=${{ env.AZURE_RESOURCE_GROUP_NAME }}" \
          -var "resource_group_location=${{ env.AZURE_RESOURCE_GROUP_LOCATION }}" \
          -out=azure.tfplan

    - name: terraform apply
      id: azure-deploy
      run: terraform apply "azure.tfplan"

    - name: Last step diagnostics
      if: always()
      run: |
        pwd
        printenv | sort
        ls -alFR -I.git